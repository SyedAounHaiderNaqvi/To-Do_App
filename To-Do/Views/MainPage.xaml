<Page
    x:Class="To_Do.Views.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:To_Do.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    Loaded="Page_Loaded"
    xmlns:model="using:To_Do.Models"
    xmlns:viewmodel="using:To_Do.ViewModels"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    xmlns:controls="using:Microsoft.UI.Xaml.Controls"
    xmlns:media="using:Microsoft.Toolkit.Uwp.UI.Media"
    controls:BackdropMaterial.ApplyToRootOrPageBackground="True"
    xmlns:animatedvisuals="using:Microsoft.UI.Xaml.Controls.AnimatedVisuals">
    <Page.DataContext>
        <viewmodel:CustomNavigationViewItemViewModel/>
    </Page.DataContext>
    <Page.Resources>

        <DataTemplate x:Key="suggestionTemplate" x:DataType="local:QueryFormat">
            <UserControl>
                <Grid HorizontalAlignment="Left" Width="270" Background="Transparent">
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup>
                            <VisualState>
                                <VisualState.StateTriggers>
                                    <AdaptiveTrigger MinWindowWidth="650" />
                                </VisualState.StateTriggers>

                                <VisualState.Setters>
                                    <Setter Target="t.Margin" Value="0,5,-120,0"/>

                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="25"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <FontIcon HorizontalAlignment="Left" Margin="0,0,0,1" FontSize="14" Grid.Column="0" Grid.RowSpan="2" Glyph="{x:Bind glyph}" Foreground="{ThemeResource SystemAccentColor}"/>
                    <Grid HorizontalAlignment="Stretch" x:Name="t" Grid.Column="1" Margin="0,5,-5,0" Grid.Row="0">
                        <TextBlock HorizontalAlignment="Stretch" TextWrapping="Wrap" Text="{x:Bind Title}"/>
                    </Grid>
                </Grid>
            </UserControl>
        </DataTemplate>
        <Thickness x:Key="NavigationViewContentMargin">0,48,0,0</Thickness>
        <Style x:Key="NavigationBackButtonNormalStyle" TargetType="Button">
            <Setter Property="Background" Value="{ThemeResource NavigationViewBackButtonBackground}"/>
            <Setter Property="Foreground" Value="{ThemeResource NavigationViewItemForegroundChecked}"/>
            <Setter Property="FontFamily" Value="{ThemeResource SymbolThemeFontFamily}"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Height" Value="{ThemeResource NavigationBackButtonHeight}"/>
            <Setter Property="Width" Value="{ThemeResource NavigationBackButtonWidth}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}"/>
            <Setter Property="Content" Value="&#xE72B;"/>
            <Setter Property="Margin" Value="4,2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid x:Name="RootGrid" Background="{TemplateBinding Background}" CornerRadius="{ThemeResource ControlCornerRadius}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="PointerOver">
                                        <VisualState.Setters>
                                            <Setter Target="Content.(controls:AnimatedIcon.State)" Value="PointerOver"/>
                                        </VisualState.Setters>
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource NavigationViewButtonBackgroundPointerOver}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource NavigationViewButtonForegroundPointerOver}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <VisualState.Setters>
                                            <Setter Target="Content.(controls:AnimatedIcon.State)" Value="Pressed"/>
                                        </VisualState.Setters>
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource NavigationViewButtonBackgroundPressed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource NavigationViewButtonForegroundPressed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource NavigationViewButtonForegroundDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <controls:AnimatedIcon x:Name="Content" AutomationProperties.AccessibilityView="Raw" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Height="16" MirroredWhenRightToLeft="True" controls:AnimatedIcon.State="Normal" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Width="16">
                                <controls:AnimatedIcon.FallbackIconSource>
                                    <controls:FontIconSource FontFamily="{Binding FontFamily, RelativeSource={RelativeSource Mode=TemplatedParent}}" FontSize="{Binding FontSize, RelativeSource={RelativeSource Mode=TemplatedParent}}" Glyph="{Binding Content, RelativeSource={RelativeSource Mode=TemplatedParent}}" MirroredWhenRightToLeft="True"/>
                                </controls:AnimatedIcon.FallbackIconSource>
                                <animatedvisuals:AnimatedBackVisualSource/>
                            </controls:AnimatedIcon>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="NavigationBackButtonSmallStyle" BasedOn="{StaticResource NavigationBackButtonNormalStyle}" TargetType="Button">
            <Setter Property="Margin" Value="4,2,0,2"/>
        </Style>
        <Style x:Key="NavigationViewStyle1" TargetType="controls:NavigationView">
            <Setter Property="PaneToggleButtonStyle" Value="{StaticResource PaneToggleButtonStyle}"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="CompactPaneLength" Value="{ThemeResource NavigationViewCompactPaneLength}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="controls:NavigationView">
                        <Grid x:Name="RootGrid">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="DisplayModeGroup">
                                    <VisualState x:Name="Compact"/>
                                    <VisualState x:Name="Expanded"/>
                                    <VisualState x:Name="Minimal">
                                        <VisualState.Setters>
                                            <Setter Target="HeaderContent.Margin" Value="15,20,0,0"/>
                                            <Setter Target="NavigationViewBackButton.Style" Value="{ThemeResource NavigationBackButtonSmallStyle}"/>
                                            <Setter Target="ContentGrid.BorderThickness" Value="{ThemeResource NavigationViewMinimalContentGridBorderThickness}"/>
                                            <Setter Target="ContentGrid.CornerRadius" Value="{ThemeResource NavigationViewMinimalContentGridCornerRadius}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="TopNavigationMinimal">
                                        <VisualState.Setters>
                                            <Setter Target="ContentGrid.BorderThickness" Value="{ThemeResource TopNavigationViewContentGridBorderThickness}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="MinimalWithBackButton">
                                        <VisualState.Setters>
                                            <Setter Target="HeaderContent.Margin" Value="{ThemeResource NavigationViewMinimalHeaderMargin}"/>
                                            <Setter Target="NavigationViewBackButton.Style" Value="{ThemeResource NavigationBackButtonSmallStyle}"/>
                                            <Setter Target="ContentGrid.BorderThickness" Value="{ThemeResource NavigationViewMinimalContentGridBorderThickness}"/>
                                            <Setter Target="ContentGrid.CornerRadius" Value="{ThemeResource NavigationViewMinimalContentGridCornerRadius}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="TogglePaneGroup">
                                    <VisualState x:Name="TogglePaneButtonCollapsed"/>
                                    <VisualState x:Name="TogglePaneButtonVisible">
                                        <VisualState.Setters>
                                            <Setter Target="PaneContentGridToggleButtonRow.MinHeight" Value="{StaticResource NavigationViewPaneHeaderRowMinHeight}"/>
                                            <Setter Target="PaneTitlePresenter.Margin" Value="{ThemeResource NavigationViewItemInnerHeaderMargin}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="HeaderGroup">
                                    <VisualState x:Name="HeaderVisible"/>
                                    <VisualState x:Name="HeaderCollapsed">
                                        <VisualState.Setters>
                                            <Setter Target="HeaderContent.Visibility" Value="Collapsed"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="AutoSuggestGroup">
                                    <VisualState x:Name="AutoSuggestBoxVisible"/>
                                    <VisualState x:Name="AutoSuggestBoxCollapsed">
                                        <VisualState.Setters>
                                            <Setter Target="AutoSuggestArea.Visibility" Value="Collapsed"/>
                                            <Setter Target="TopPaneAutoSuggestArea.Visibility" Value="Collapsed"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="PaneStateGroup">
                                    <VisualState x:Name="NotClosedCompact"/>
                                    <VisualState x:Name="ClosedCompact">
                                        <VisualState.Setters>
                                            <Setter Target="PaneAutoSuggestBoxPresenter.Visibility" Value="Collapsed"/>
                                            <Setter Target="PaneAutoSuggestButton.Visibility" Value="Visible"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="PaneStateListSizeGroup">
                                    <VisualState x:Name="ListSizeFull"/>
                                    <VisualState x:Name="ListSizeCompact">
                                        <VisualState.Setters>
                                            <Setter Target="PaneContentGrid.Width" Value="{Binding CompactPaneLength, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                            <Setter Target="ShadowCaster.Width" Value="{Binding CompactPaneLength, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                            <Setter Target="PaneTitleTextBlock.Visibility" Value="Collapsed"/>
                                            <Setter Target="PaneHeaderContentBorder.Visibility" Value="Collapsed"/>
                                            <Setter Target="PaneCustomContentBorder.HorizontalAlignment" Value="Left"/>
                                            <Setter Target="FooterContentBorder.HorizontalAlignment" Value="Left"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="PaneOverlayGroup">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="PaneNotOverlaying" To="PaneOverlaying">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ShadowCasterTransform" Storyboard.TargetProperty="TranslateX">
                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="{Binding TemplateSettings.NegativeOpenPaneLengthMinusCompactLength, ElementName=RootSplitView}"/>
                                                    <SplineDoubleKeyFrame KeySpline="0.1,0.9 0.2,1.0" KeyTime="0:0:0.35" Value="0"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ShadowCaster" Storyboard.TargetProperty="Opacity">
                                                    <LinearDoubleKeyFrame KeyTime="0:0:0.35" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ShadowCaster" Storyboard.TargetProperty="HorizontalAlignment">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="Left"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition From="PaneOverlaying" To="PaneNotOverlaying">
                                            <Storyboard x:Name="ShadowCasterEaseOutStoryboard">
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ShadowCasterTransform" Storyboard.TargetProperty="TranslateX">
                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="0"/>
                                                    <SplineDoubleKeyFrame KeySpline="0.1,0.9 0.2,1.0" KeyTime="0:0:0.12" Value="{Binding TemplateSettings.NegativeOpenPaneLengthMinusCompactLength, ElementName=RootSplitView}"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ShadowCaster" Storyboard.TargetProperty="Opacity">
                                                    <LinearDoubleKeyFrame KeyTime="0:0:0.12" Value="0"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ShadowCaster" Storyboard.TargetProperty="HorizontalAlignment">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="Left"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="PaneOverlaying"/>
                                    <VisualState x:Name="PaneNotOverlaying">
                                        <VisualState.Setters>
                                            <Setter Target="RootSplitView.BorderBrush" Value="Transparent"/>
                                            <Setter Target="ShadowCaster.Opacity" Value="0"/>
                                            <Setter Target="RootSplitView.PaneBackground" Value="{ThemeResource NavigationViewExpandedPaneBackground}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="TitleBarVisibilityGroup">
                                    <VisualState x:Name="TitleBarVisible"/>
                                    <VisualState x:Name="TitleBarCollapsed">
                                        <VisualState.Setters>
                                            <Setter Target="PaneContentGrid.Margin" Value="0,32,0,0"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="OverflowLabelGroup">
                                    <VisualState x:Name="OverflowButtonWithLabel"/>
                                    <VisualState x:Name="OverflowButtonNoLabel">
                                        <VisualState.Setters>
                                            <Setter Target="TopNavOverflowButton.Style" Value="{ThemeResource NavigationViewOverflowButtonNoLabelStyleWhenPaneOnTop}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="BackButtonGroup">
                                    <VisualState x:Name="BackButtonVisible"/>
                                    <VisualState x:Name="BackButtonCollapsed">
                                        <VisualState.Setters>
                                            <Setter Target="BackButtonPlaceholderOnTopNav.Width" Value="0"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="PaneVisibilityGroup">
                                    <VisualState x:Name="PaneVisible"/>
                                    <VisualState x:Name="PaneCollapsed">
                                        <VisualState.Setters>
                                            <Setter Target="RootSplitView.CompactPaneLength" Value="0"/>
                                            <Setter Target="ShadowCaster.Width" Value="0"/>
                                            <Setter Target="PaneToggleButtonGrid.Visibility" Value="Collapsed"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="PaneSeparatorStates">
                                    <VisualState x:Name="SeparatorCollapsed"/>
                                    <VisualState x:Name="SeparatorVisible">
                                        <VisualState.Setters>
                                            <Setter Target="VisualItemsSeparator.Visibility" Value="Visible"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid x:Name="PaneToggleButtonGrid" HorizontalAlignment="Left" VerticalAlignment="Top" Canvas.ZIndex="100">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid x:Name="TogglePaneTopPadding" Height="{Binding TemplateSettings.TopPadding, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                <Grid x:Name="ButtonHolderGrid" Margin="{ThemeResource NavigationViewButtonHolderGridMargin}" Grid.Row="1">
                                    <Button x:Name="NavigationViewBackButton" IsEnabled="{TemplateBinding IsBackEnabled}" Style="{StaticResource NavigationBackButtonNormalStyle}" VerticalAlignment="Top" Visibility="{Binding TemplateSettings.BackButtonVisibility, RelativeSource={RelativeSource Mode=TemplatedParent}}" Width="{Binding TemplateSettings.SmallerPaneToggleButtonWidth, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                        <ToolTipService.ToolTip>
                                            <ToolTip x:Name="NavigationViewBackButtonToolTip"/>
                                        </ToolTipService.ToolTip>
                                    </Button>
                                    <Button x:Name="NavigationViewCloseButton" Style="{StaticResource NavigationBackButtonNormalStyle}" VerticalAlignment="Top">
                                        <ToolTipService.ToolTip>
                                            <ToolTip x:Name="NavigationViewCloseButtonToolTip"/>
                                        </ToolTipService.ToolTip>
                                    </Button>
                                    <Button x:Name="TogglePaneButton" FocusVisualMargin="0" HorizontalAlignment="Center" AutomationProperties.LandmarkType="Navigation" MinWidth="{Binding TemplateSettings.SmallerPaneToggleButtonWidth, RelativeSource={RelativeSource Mode=TemplatedParent}}" Style="{TemplateBinding PaneToggleButtonStyle}" VerticalAlignment="Top" Visibility="{Binding TemplateSettings.PaneToggleButtonVisibility, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                        <TextBlock x:Name="PaneTitleTextBlock" Grid.Column="0" HorizontalAlignment="Left" Margin="0,-2,0,0" Style="{StaticResource NavigationViewItemHeaderTextStyle}" Text="{TemplateBinding PaneTitle}" VerticalAlignment="Center"/>
                                    </Button>
                                    <Grid x:Name="PaneTitleHolder" Height="40" Visibility="Collapsed">
                                        <ContentControl x:Name="PaneTitlePresenter" HorizontalContentAlignment="Stretch" IsTabStop="False" Margin="{ThemeResource NavigationViewPaneTitlePresenterMargin}" VerticalContentAlignment="Stretch"/>
                                    </Grid>
                                </Grid>
                            </Grid>
                            <Grid Background="{ThemeResource SideBarColor}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <StackPanel x:Name="TopNavArea" Background="{ThemeResource NavigationViewTopPaneBackground}" HorizontalAlignment="Stretch" Grid.Row="0" VerticalAlignment="Top" XYFocusKeyboardNavigation="Enabled" Canvas.ZIndex="1">
                                    <Grid x:Name="TopNavTopPadding" Height="{Binding TemplateSettings.TopPadding, RelativeSource={RelativeSource Mode=TemplatedParent}}" Visibility="{Binding TemplateSettings.TopPaneVisibility, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                    <Grid x:Name="TopNavGrid" BorderBrush="{ThemeResource NavigationViewItemSeparatorForeground}" Height="{ThemeResource NavigationViewTopPaneHeight}" Margin="{ThemeResource TopNavigationViewTopNavGridMargin}" Visibility="{Binding TemplateSettings.TopPaneVisibility, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition x:Name="BackButtonPlaceholderOnTopNav" Width="{ThemeResource NavigationBackButtonWidth}"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition MinWidth="{ThemeResource TopNavigationViewPaneCustomContentMinWidth}" Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid x:Name="TopNavLeftPadding" Grid.Column="1" Width="0"/>
                                        <ContentControl x:Name="PaneHeaderOnTopPane" Grid.Column="2" HorizontalContentAlignment="Stretch" IsTabStop="False" VerticalContentAlignment="Stretch"/>
                                        <ContentControl x:Name="PaneTitleOnTopPane" Grid.Column="2" HorizontalContentAlignment="Stretch" IsTabStop="False" Margin="{ThemeResource NavigationViewItemInnerHeaderMargin}" VerticalContentAlignment="Stretch"/>
                                        <controls:ItemsRepeaterScrollHost Grid.Column="3">
                                            <ScrollViewer HorizontalScrollBarVisibility="Hidden" HorizontalScrollMode="Disabled" VerticalScrollMode="Disabled" VerticalScrollBarVisibility="Hidden">
                                                <controls:ItemsRepeater x:Name="TopNavMenuItemsHost" AutomationProperties.AccessibilityView="Content" AutomationProperties.LandmarkType="Navigation" AutomationProperties.Name="{TemplateBinding AutomationProperties.Name}">
                                                    <controls:ItemsRepeater.Layout>
                                                        <controls:StackLayout Orientation="Horizontal"/>
                                                    </controls:ItemsRepeater.Layout>
                                                </controls:ItemsRepeater>
                                            </ScrollViewer>
                                        </controls:ItemsRepeaterScrollHost>
                                        <Button x:Name="TopNavOverflowButton" Content="More" Grid.Column="4" Margin="{ThemeResource TopNavigationViewOverflowButtonMargin}" Style="{StaticResource NavigationViewOverflowButtonStyleWhenPaneOnTop}" Visibility="{Binding TemplateSettings.OverflowButtonVisibility, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                            <Button.Flyout>
                                                <Flyout ElementSoundMode="{Binding ElementSoundMode, RelativeSource={RelativeSource Mode=TemplatedParent}}" Placement="Bottom">
                                                    <Flyout.FlyoutPresenterStyle>
                                                        <Style TargetType="FlyoutPresenter">
                                                            <Setter Property="Padding" Value="{ThemeResource TopNavigationViewOverflowMenuPadding}"/>
                                                            <Setter Property="Margin" Value="0,-4,0,0"/>
                                                            <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Auto"/>
                                                            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                                                            <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto"/>
                                                            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                                                            <Setter Property="ScrollViewer.ZoomMode" Value="Disabled"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="FlyoutPresenter">
                                                                        <ScrollViewer x:Name="ScrollViewer" AutomationProperties.AccessibilityView="Raw" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}">
                                                                            <ContentPresenter x:Name="ContentPresenter" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" CornerRadius="{ThemeResource OverlayCornerRadius}" ContentTransitions="{TemplateBinding ContentTransitions}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                        </ScrollViewer>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </Flyout.FlyoutPresenterStyle>
                                                    <controls:ItemsRepeaterScrollHost>
                                                        <ScrollViewer VerticalScrollBarVisibility="Auto">
                                                            <controls:ItemsRepeater x:Name="TopNavMenuItemsOverflowHost" AutomationProperties.AccessibilityView="Content">
                                                                <controls:ItemsRepeater.Layout>
                                                                    <controls:StackLayout/>
                                                                </controls:ItemsRepeater.Layout>
                                                            </controls:ItemsRepeater>
                                                        </ScrollViewer>
                                                    </controls:ItemsRepeaterScrollHost>
                                                </Flyout>
                                            </Button.Flyout>
                                        </Button>
                                        <ContentControl x:Name="PaneCustomContentOnTopPane" Grid.Column="5" HorizontalContentAlignment="Stretch" IsTabStop="False" VerticalContentAlignment="Stretch"/>
                                        <Grid x:Name="TopPaneAutoSuggestArea" Grid.Column="6" Height="{ThemeResource NavigationViewTopPaneHeight}">
                                            <ContentControl x:Name="TopPaneAutoSuggestBoxPresenter" HorizontalContentAlignment="Stretch" IsTabStop="False" MinWidth="216" Margin="{ThemeResource TopNavigationViewAutoSuggestBoxMargin}" VerticalContentAlignment="Center"/>
                                        </Grid>
                                        <ContentControl x:Name="PaneFooterOnTopPane" Grid.Column="7" HorizontalContentAlignment="Stretch" IsTabStop="False" VerticalContentAlignment="Stretch"/>
                                        <controls:ItemsRepeater x:Name="TopFooterMenuItemsHost" AutomationProperties.AccessibilityView="Content" Grid.Column="8" AutomationProperties.LandmarkType="Navigation">
                                            <controls:ItemsRepeater.Layout>
                                                <controls:StackLayout Orientation="Horizontal"/>
                                            </controls:ItemsRepeater.Layout>
                                        </controls:ItemsRepeater>
                                    </Grid>
                                    <Border x:Name="TopNavContentOverlayAreaGrid" Child="{TemplateBinding ContentOverlay}"/>
                                </StackPanel>
                                <SplitView PaneBackground="{ThemeResource ExpanderContentBackground}" Background="{TemplateBinding Background}" x:Name="RootSplitView" Margin="0,-1,0,-1" CornerRadius="{ThemeResource NavViewSplitViewCorners}"  BorderThickness="1" BorderBrush="{ThemeResource NavigationViewItemSeparatorForeground}" CompactPaneLength="{TemplateBinding CompactPaneLength}" DisplayMode="Inline" IsTabStop="False" IsPaneOpen="{Binding IsPaneOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" OpenPaneLength="{TemplateBinding OpenPaneLength}"  Grid.Row="1">
                                    <SplitView.Pane>
                                        <Grid x:Name="PaneContentGrid" BorderBrush="{ThemeResource NavigationViewItemSeparatorForeground}" HorizontalAlignment="Left" Margin="{ThemeResource NavigationViewPaneContentGridMargin}" Visibility="{Binding TemplateSettings.LeftPaneVisibility, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="0"/>
                                                <RowDefinition x:Name="PaneContentGridToggleButtonRow" Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="0"/>
                                                <RowDefinition x:Name="ItemsContainerRow" Height="*"/>
                                            </Grid.RowDefinitions>
                                            <Grid x:Name="ContentPaneTopPadding" Height="{Binding TemplateSettings.TopPadding, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                            <Grid Grid.Row="2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition x:Name="PaneHeaderCloseButtonColumn"/>
                                                    <ColumnDefinition x:Name="PaneHeaderToggleButtonColumn"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition x:Name="PaneHeaderContentBorderRow"/>
                                                </Grid.RowDefinitions>
                                                <ContentControl x:Name="PaneHeaderContentBorder" Grid.Column="2" HorizontalContentAlignment="Stretch" IsTabStop="False" VerticalContentAlignment="Stretch"/>
                                            </Grid>
                                            <Grid x:Name="AutoSuggestArea" Height="{ThemeResource NavigationViewAutoSuggestAreaHeight}" Margin="0,0,0,8" Grid.Row="3" VerticalAlignment="Center">
                                                <ContentControl x:Name="PaneAutoSuggestBoxPresenter" HorizontalContentAlignment="Stretch" IsTabStop="False" Margin="{ThemeResource NavigationViewAutoSuggestBoxMargin}" VerticalContentAlignment="Center"/>
                                                <Button x:Name="PaneAutoSuggestButton" Visibility="Collapsed" Width="{Binding TemplateSettings.SmallerPaneToggleButtonWidth, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                                    <Button.Resources>
                                                        <ResourceDictionary>
                                                            <ResourceDictionary.ThemeDictionaries>
                                                                <ResourceDictionary x:Key="Default">
                                                                    <StaticResource x:Key="ButtonBackgroundPointerOver" ResourceKey="NavigationViewItemBackgroundPointerOver"/>
                                                                    <StaticResource x:Key="ButtonBackgroundPressed" ResourceKey="NavigationViewItemBackgroundPressed"/>
                                                                    <StaticResource x:Key="ButtonBackgroundDisabled" ResourceKey="NavigationViewItemBackgroundDisabled"/>
                                                                    <StaticResource x:Key="ButtonForegroundPointerOver" ResourceKey="NavigationViewItemForegroundPointerOver"/>
                                                                    <StaticResource x:Key="ButtonForegroundPressed" ResourceKey="NavigationViewItemForegroundPressed"/>
                                                                    <StaticResource x:Key="ButtonForegroundDisabled" ResourceKey="NavigationViewItemForegroundDisabled"/>
                                                                    <StaticResource x:Key="ButtonBorderBrushPointerOver" ResourceKey="NavigationViewItemBorderBrushPointerOver"/>
                                                                    <StaticResource x:Key="ButtonBorderBrushPressed" ResourceKey="NavigationViewItemBorderBrushPressed"/>
                                                                    <StaticResource x:Key="ButtonBorderBrushDisabled" ResourceKey="NavigationViewItemBorderBrushDisabled"/>
                                                                </ResourceDictionary>
                                                                <ResourceDictionary x:Key="Light">
                                                                    <StaticResource x:Key="ButtonBackgroundPointerOver" ResourceKey="NavigationViewItemBackgroundPointerOver"/>
                                                                    <StaticResource x:Key="ButtonBackgroundPressed" ResourceKey="NavigationViewItemBackgroundPressed"/>
                                                                    <StaticResource x:Key="ButtonBackgroundDisabled" ResourceKey="NavigationViewItemBackgroundDisabled"/>
                                                                    <StaticResource x:Key="ButtonForegroundPointerOver" ResourceKey="NavigationViewItemForegroundPointerOver"/>
                                                                    <StaticResource x:Key="ButtonForegroundPressed" ResourceKey="NavigationViewItemForegroundPressed"/>
                                                                    <StaticResource x:Key="ButtonForegroundDisabled" ResourceKey="NavigationViewItemForegroundDisabled"/>
                                                                    <StaticResource x:Key="ButtonBorderBrushPointerOver" ResourceKey="NavigationViewItemBorderBrushPointerOver"/>
                                                                    <StaticResource x:Key="ButtonBorderBrushPressed" ResourceKey="NavigationViewItemBorderBrushPressed"/>
                                                                    <StaticResource x:Key="ButtonBorderBrushDisabled" ResourceKey="NavigationViewItemBorderBrushDisabled"/>
                                                                </ResourceDictionary>
                                                            </ResourceDictionary.ThemeDictionaries>
                                                        </ResourceDictionary>
                                                    </Button.Resources>
                                                    <Button.Style>
                                                        <ThemeResource ResourceKey="NavigationViewPaneSearchButtonStyle"/>
                                                    </Button.Style>
                                                </Button>
                                            </Grid>
                                            <ContentControl x:Name="PaneCustomContentBorder" HorizontalContentAlignment="Stretch" IsTabStop="False" Grid.Row="4" VerticalContentAlignment="Stretch"/>
                                            <Grid x:Name="ItemsContainerGrid" Grid.Row="6">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <controls:ItemsRepeaterScrollHost HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                                    <ScrollViewer x:Name="MenuItemsScrollViewer" TabNavigation="Local" VerticalScrollBarVisibility="Auto">
                                                        <controls:ItemsRepeater x:Name="MenuItemsHost" AutomationProperties.AccessibilityView="Content" AutomationProperties.Name="{TemplateBinding AutomationProperties.Name}">
                                                            <controls:ItemsRepeater.Layout>
                                                                <controls:StackLayout/>
                                                            </controls:ItemsRepeater.Layout>
                                                        </controls:ItemsRepeater>
                                                    </ScrollViewer>
                                                </controls:ItemsRepeaterScrollHost>
                                                <controls:NavigationViewItemSeparator x:Name="VisualItemsSeparator" HorizontalAlignment="Stretch" Margin="0,0,0,2" Grid.Row="1" VerticalAlignment="Center" Visibility="Collapsed"/>
                                                <ContentControl x:Name="FooterContentBorder" HorizontalContentAlignment="Stretch" IsTabStop="False" Margin="0,0,0,4" Grid.Row="2" VerticalContentAlignment="Stretch"/>
                                                <controls:ItemsRepeaterScrollHost Grid.Row="3">
                                                    <ScrollViewer x:Name="FooterItemsScrollViewer" VerticalScrollBarVisibility="Auto">
                                                        <controls:ItemsRepeater x:Name="FooterMenuItemsHost" AutomationProperties.AccessibilityView="Content">
                                                            <controls:ItemsRepeater.Layout>
                                                                <controls:StackLayout/>
                                                            </controls:ItemsRepeater.Layout>
                                                        </controls:ItemsRepeater>
                                                    </ScrollViewer>
                                                </controls:ItemsRepeaterScrollHost>
                                            </Grid>
                                        </Grid>
                                    </SplitView.Pane>
                                    <Grid CornerRadius="0" x:Name="ContentGrid" BorderThickness="{ThemeResource NavigationViewContentGridBorderThickness}" BorderBrush="{ThemeResource NavigationViewContentGridBorderBrush}" Margin="0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>
                                        <Grid x:Name="ContentTopPadding" Grid.ColumnSpan="2" Height="{Binding TemplateSettings.TopPadding, RelativeSource={RelativeSource Mode=TemplatedParent}}" Visibility="{Binding TemplateSettings.LeftPaneVisibility, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                        <Grid x:Name="ContentLeftPadding" Grid.Row="1"/>
                                        <ContentControl x:Name="HeaderContent" Foreground="{ThemeResource SystemAccentColor}" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" HorizontalContentAlignment="Stretch" IsTabStop="False" MinHeight="{StaticResource PaneToggleButtonHeight}" Grid.Row="1" Style="{StaticResource NavigationViewTitleHeaderContentControlTextStyle}" VerticalContentAlignment="Stretch"/>
                                        <ContentPresenter x:Name="ContentPresenter" Content="{TemplateBinding Content}" Grid.ColumnSpan="2" AutomationProperties.LandmarkType="Main" Margin="{ThemeResource NavigationViewContentPresenterMargin}" Grid.Row="2"/>
                                    </Grid>
                                </SplitView>
                                <Grid x:Name="ShadowCaster" HorizontalAlignment="Left" Grid.RowSpan="2" Width="{TemplateBinding OpenPaneLength}">
                                    <Grid.RenderTransform>
                                        <CompositeTransform x:Name="ShadowCasterTransform"/>
                                    </Grid.RenderTransform>
                                </Grid>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>
    <Grid>
        <Grid.Resources>
            <ThemeShadow x:Name="SharedShadow" />
        </Grid.Resources>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="ExpandedState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="760" />
                    </VisualState.StateTriggers>

                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames
       Storyboard.TargetName="serchgrid"
       Storyboard.TargetProperty="X"
       Duration="0:0:0.07" EnableDependentAnimation="True">

                            <LinearDoubleKeyFrame Value="50" KeyTime="0:0:0.07" />

                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="CollapsedState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames
       Storyboard.TargetName="serchgrid"
       Storyboard.TargetProperty="X"
       Duration="0:0:0.07" EnableDependentAnimation="True">

                            <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0.07" />

                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <!--<Border IsHitTestVisible="True" Background="Red" Margin="48,0,0,0" Height="48" VerticalAlignment="Top" x:Name="AppTitleBar">
        </Border>-->
        <controls:NavigationView MenuItemsSource="{Binding Path=NavViewItemsList, Mode=TwoWay}" PaneTitle="To-Do" x:FieldModifier="public" Header="" Style="{StaticResource NavigationViewStyle1}" IsBackButtonVisible="Collapsed" IsBackEnabled="False" DisplayModeChanged="nview_DisplayModeChanged" x:Name="nview" IsTitleBarAutoPaddingEnabled="False" OpenPaneLength="270" ExpandedModeThresholdWidth="1080" CompactModeThresholdWidth="0" PaneDisplayMode="Auto" SelectionChanged="NavigationView_SelectionChanged">
            <controls:NavigationView.MenuItemTemplate>
                <DataTemplate x:DataType="model:CustomNavigationViewItemModel">
                    <controls:NavigationViewItem Canvas.ZIndex="1" x:Name="parent" PointerCaptureLost="NavigationViewItem_PointerCaptureLost" PointerEntered="NavigationViewItem_PointerEntered" PointerExited="NavigationViewItem_PointerExited" ToolTipService.ToolTip="{Binding Path=Name, Mode=TwoWay}">
                        <controls:NavigationViewItem.Content>
                            <Grid Margin="0,0,-12,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="30"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock x:Name="itemName" TextTrimming="CharacterEllipsis" Grid.Column="0" Text="{Binding Path=Name, Mode=TwoWay}" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                <Button Padding="0" Grid.Column="1" Click="DeleteList" Visibility="Collapsed" x:Name="deleteListButton" ToolTipService.ToolTip="Delete List" Height="20" Width="20" CornerRadius="16" BorderThickness="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                    <Button.Content>
                                        <FontIcon Glyph="&#xE711;" FontSize="8"/>
                                    </Button.Content>
                                </Button>
                            </Grid>
                        </controls:NavigationViewItem.Content>
                        <controls:NavigationViewItem.Icon>
                            <FontIcon Glyph="{Binding Path=Glyph, Mode=TwoWay}" />
                        </controls:NavigationViewItem.Icon>
                        <!--<controls:NavigationViewItem.InfoBadge>
                            <controls:InfoBadge Opacity="{x:Bind opacity, Mode=OneWay}" Value="{x:Bind badgeNum, Mode=OneWay}"/>
                        </controls:NavigationViewItem.InfoBadge>-->
                    </controls:NavigationViewItem>
                </DataTemplate>
            </controls:NavigationView.MenuItemTemplate>

            <controls:NavigationView.AutoSuggestBox>
                <AutoSuggestBox GotFocus="searchbox_GotFocus" x:Name="searchbox" HorizontalContentAlignment="Left" UpdateTextOnSelect="False" SuggestionChosen="AutoSuggestBox_SuggestionChosen" ItemTemplate="{StaticResource suggestionTemplate}" TextChanged="AutoSuggestBox_TextChanged" QuerySubmitted="AutoSuggestBox_QuerySubmitted" QueryIcon="Find" PlaceholderText="Search current list" AutomationProperties.Name="Search"/>
            </controls:NavigationView.AutoSuggestBox>
            
            <controls:NavigationView.PaneCustomContent>
                <StackPanel Orientation="Vertical">
                    <Button ToolTipService.ToolTip="Create New List" CornerRadius="{ThemeResource ControlCornerRadius}" Click="AddNewListToNavView" HorizontalContentAlignment="Left" Background="Transparent" BorderBrush="Transparent" Height="36" HorizontalAlignment="Stretch" Margin="4,2,4,2">
                        <Button.Content>
                            <StackPanel Orientation="Horizontal" Spacing="16">
                                <FontIcon FontSize="16" Glyph="&#xE710;"/>
                                <TextBlock Text="Create New List"/>
                            </StackPanel>
                        </Button.Content>
                    </Button>
                    <controls:NavigationViewItemSeparator/>
                </StackPanel>
            </controls:NavigationView.PaneCustomContent>

            <!--<controls:NavigationView.MenuItems>

                <controls:NavigationViewItem ToolTipService.ToolTip="Pending Tasks" Tag="PendingTasks" IsSelected="True">
                    <controls:NavigationViewItem.Icon>
                        <FontIcon Glyph="&#xE823;"/>
                    </controls:NavigationViewItem.Icon>
                    <controls:NavigationViewItem.Content>
                        <TextBlock Text="Pending Tasks"/>
                    </controls:NavigationViewItem.Content>
                </controls:NavigationViewItem>
            </controls:NavigationView.MenuItems>-->

            <Grid Background="{ThemeResource NavigationViewContentBackground}">
                <Rectangle Fill="{ThemeResource NavigationViewContentBackground}" IsHitTestVisible="False" VerticalAlignment="top" Height="85" HorizontalAlignment="Stretch" Margin="0,-85,0,0">
                </Rectangle>
                <controls:ParallaxView Margin="0,-83,0,0" x:Name="parallax" x:FieldModifier="public" IsHitTestVisible="False" VerticalSourceStartOffset="0" VerticalSourceEndOffset="0" VerticalShift="0" VerticalSourceOffsetKind="Absolute">
                    <!--VerticleSourceEndOffset=1800, VerticalShift=100-->
                    <Image x:FieldModifier="public" IsHitTestVisible="False" MinWidth="200" x:Name="bgIMG" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Stretch="UniformToFill"/>

                </controls:ParallaxView>
                <Frame x:FieldModifier="public" x:Name="ContentFrame"/>
                <Grid MinWidth="200" Margin="-4,-84,0,0" x:FieldModifier="public" x:Name="LoadingUI" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
                    <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="{ThemeResource ExpanderHeaderBackground}">
                        <controls:ProgressRing x:FieldModifier="public" IsActive="True" x:Name="Ring" Width="70" Height="70"/>
                    </Grid>
                </Grid>
            </Grid>
        </controls:NavigationView>
        <Border IsHitTestVisible="True" Background="Transparent" Margin="48,0,0,0" Height="48" VerticalAlignment="Top" x:Name="AppTitleBar">
        </Border>
        <!--Titlebar blur-->
        <Grid Canvas.ZIndex="25" VerticalAlignment="Top" HorizontalAlignment="Right" Width="138" IsHitTestVisible="False" Height="32">
            <Grid.Background>
                <media:AcrylicBrush BlurAmount="1" BackgroundSource="Backdrop" TintColor="Transparent" TintOpacity="0"/>
            </Grid.Background>
        </Grid>
    </Grid>
</Page>
